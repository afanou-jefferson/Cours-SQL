Requêtes à réaliser :

a. Listez les articles dans l’ordre alphabétique des désignations
SELECT * FROM `article` ORDER BY designation ASC

b. Listez les articles dans l’ordre des prix du plus élevé au moins elevé
SELECT * FROM `article` ORDER BY prix DESC

c. Listez les articles dont le prix est supérieur à 25€
SELECT * FROM article WHERE article.prix > 25

d. Listez tous les articles qui sont des « boulons » et triez les résultats par ordre de prix ascendant
SELECT * FROM article WHERE article.designation LIKE '%boulon%' ORDER BY article.prix ASC

e. Listez tous les articles dont la désignation contient le mot « sachet ».
SELECT * from article WHERE article.designation LIKE '%sachet%'

f. Listez tous les articles dont la désignation contient le mot « sachet » indépendamment de la casse !
SELECT * FROM article WHERE LOWER(article.designation) LIKE LOWER('%sachet%')

g. Listez les articles avec les informations fournisseur correspondantes. Les résultats
doivent être triées dans l’ordre alphabétique des fournisseurs et par article du prix le
plus élevé au moins élevé.
SELECT * FROM article, fournisseur WHERE article.id_Fournisseur = fournisseur.id_Fournisseur ORDER by fournisseur.nom ASC , article.prix DESC

h. Listez les articles de la société « Dubois & Fils »
SELECT * from article, fournisseur WHERE article.id_Fournisseur = fournisseur.id_Fournisseur AND fournisseur.nom LIKE "Dubois & Fils"


i. Calculez la moyenne des prix des articles de la société « Dubois & Fils »
SELECT AVG(article.prix) from article , fournisseur WHERE article.id_Fournisseur = fournisseur.id_Fournisseur AND fournisseur.nom LIKE "Dubois & Fils";

j. Calculez la moyenne des prix des articles de chaque fournisseur
SELECT fournisseur.nom, AVG(article.prix) FROM article INNER JOIN fournisseur on fournisseur.id_Fournisseur = article.id_Article GROUP BY fournisseur.id_Fournisseur

k. Sélectionnez tous les bons de commandes émis entre le 01/03/2019 et le 05/04/2019 à 12h00.
SELECT * FROM bon WHERE bon.date_cmde BETWEEN '2019-03-01' AND '2019-04-05'

l. Sélectionnez les divers bons de commande qui contiennent des boulons
Select * from bon INNER JOIN compo on compo.id_Bon = bon.id_bon INNER JOIN article on article.id_Article = compo.id_Article WHERE article.designation LIKE '%boulon%' GROUP BY bon.id_bon

m. Sélectionnez les divers bons de commande qui contiennent des boulons avec le nom du fournisseur associé.
Select fournisseur.nom, bon.id_bon, bon.numero, bon.date_cmde, bon.delai from bon 
INNER JOIN compo on compo.id_Bon = bon.id_bon 
INNER JOIN article on article.id_Article = compo.id_Article 
INNER JOIN fournisseur on fournisseur.id_Fournisseur = article.id_Fournisseur
WHERE article.designation LIKE '%boulon%' GROUP BY bon.id_bon;

n. Calculez le prix total de chaque bon de commande
SELECT bon.id_bon, SUM((article.prix*compo.qte)) FROM article INNER JsOIN compo on compo.id_Article = article.id_Article INNER JOIN bon on bon.id_bon = compo.id_Bon GROUP BY compo.id_bon

o. Comptez le nombre d’articles de chaque bon de commande
SELECT bon.id_bon, SUM(compo.qte) FROM article INNER JOIN compo on compo.id_Article = article.id_Article INNER JOIN bon on bon.id_bon = compo.id_Bon GROUP BY bon.id_bon

p. Affichez les numéros de bons de commande qui contiennent plus de 25 articles et
affichez le nombre d’articles de chacun de ces bons de commande
SELECT bon.id_bon, SUM(compo.qte) FROM article INNER JOIN compo on compo.id_Article = article.id_Article INNER JOIN bon on bon.id_bon = compo.id_Bon GROUP BY bon.id_bon HAVING SUM(compo.qte) > 25

q. Calculez le coût total des commandes effectuées sur le mois d’avril
SELECT SUM((article.prix*compo.qte)) FROM article INNER JOIN compo on compo.id_Article = article.id_Article INNER JOIN bon on bon.id_bon = compo.id_Bon WHERE bon.date_cmde BETWEEN '2019-04-01' and '2019-04-30'

4) Requêtes plus difficiles
a. Sélectionnez les articles qui ont une désignation identique mais des fournisseurs
différents (indice : réaliser une auto jointure i.e. de la table avec elle-même)
SELECT * FROM article as A1, article as A2 WHERE A1.designation = A2.designation AND A1.id_Fournisseur != A2.id_Fournisseur


b. Calculez les dépenses en commandes mois par mois (indice : utilisation des fonctions
MONTH et YEAR)
SELECT MONTH(bon.date_cmde), SUM((article.prix*compo.qte)) FROM article INNER JOIN compo on compo.id_Article = article.id_Article INNER JOIN bon on bon.id_bon = compo.id_Bon GROUP BY MONTH(Bon.date_cmde)


c. Sélectionnez les bons de commandes sans article (indice : utilisation de EXISTS)


//FAUX
SELECT bon.id_Bon FROM bon WHERE NOT EXISTS ( SELECT bon.id_Bon FROM bon INNER JOIN compo on compo.id_bon = bon.id_bon INNER JOIN article on article.id_Article = compo.id_Article group by id_bon )

d. Calculez le prix moyen des bons de commande par fournisseur.

//EN COURS
SELECT AVG(article.prix) , fournisseur.nom from article
INNER JOIN fournisseur ON fournisseur.id_Fournisseur = article.id_Fournisseur
INNER JOIN 





